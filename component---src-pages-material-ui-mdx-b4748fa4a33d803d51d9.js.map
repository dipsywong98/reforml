{"version":3,"sources":["webpack:///./src/pages/material-ui.mdx"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qQAKO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,eADR,eAGA,oDAAmC,+BAAGC,WAAW,KAAQ,CACrD,KAAQ,6BADuB,gBAGnC,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,iCAIL,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,YACd,KAAQ,SAHP,26BA4CTJ,EAAWK,gBAAiB","file":"component---src-pages-material-ui-mdx-b4748fa4a33d803d51d9.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"material-ui\"\n    }}>{`Material UI`}</h1>\n    <p>{`Reforml provides binding to `}<a parentName=\"p\" {...{\n        \"href\": \"https://material-ui.com/\"\n      }}>{`Material-UI`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm i @reforml/material-ui\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`// import { MaterialBaseComponents, MaterialFieldComponents } from '@reforml/material-ui'\n() => {\n  const [value, setValue] = useState({})\n  const handleChange = (newValue) => {\n    setValue(newValue)\n  }\n  const fields = useMemo(() => jsyaml.load(\\`\n  myText:\n    type: text\n    label: Input some value\n    fullWidth: true\n    helperText: hello world\n  myOption:\n    type: select\n    label: Input some value\n    fullWidth: true\n    options:\n      - option1\n      - option2\n    helperText: hello world\n  myCheckbox:\n    type: checkbox\n    label: check me\n    helperText: hello world\n  \\`), [])\n  return (\n    <div>\n      <ReformlProvider baseComponents={MaterialBaseComponents} fieldComponents={MaterialFieldComponents}>\n        <BaseForm fields={fields} value={value} onChange={handleChange}/>\n      </ReformlProvider>\n      value:\n      <pre>{JSON.stringify(value, null, 2)}</pre>\n    </div>\n  )\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}