{"version":3,"sources":["components/form.yml","../../../../node_modules/react-is/cjs/react-is.production.min.js","../../../../node_modules/object-assign/index.js","../../../../node_modules/react-is/cjs/react-is.development.js","../../../../node_modules/react-is/index.js","../../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../../node_modules/prop-types/checkPropTypes.js","../../../../node_modules/prop-types/factoryWithTypeCheckers.js","../../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../../node_modules/prop-types/index.js","../../src/types/fields/basic.ts","../../src/types/fields/options.ts","../../src/types/fields/index.ts","../../src/types/fields/multiSelect.ts","../../src/components/base/FieldDecoration.tsx","../../src/components/base/index.tsx","../../src/components/BaseComponentsContext.tsx","../../src/components/fields/TextInput.tsx","../../src/components/fields/NumberInput.tsx","../../src/utils/digKey.ts","../../src/hooks/useProcessOptionsMemo.ts","../../src/components/fields/Select.tsx","../../src/components/fields/Checkbox.tsx","../../src/hooks/useProcessBool.ts","../../src/hooks/useProcessMultiSelectMemo.ts","../../src/utils/isSet.ts","../../src/components/fields/CheckboxGroup.tsx","../../src/errors/MissingAttributeError.ts","../../src/utils/generalizeValueCallback.ts","../../src/errors/UndefinedFieldTypeError.ts","../../src/utils/getComponent.ts","../../src/components/fields/ListInputBuilder.tsx","../../src/components/fields/ListInput.tsx","../../src/components/fields/ListOfTextField.tsx","../../src/types/fields/object.ts","../../src/components/fields/ObjectInput.tsx","../../src/components/fields/DefaultFieldComponents.tsx","../../src/components/FieldComponentsContext.tsx","../../src/components/forms/BaseForm.tsx","../../src/utils/mergeDefaultValue.ts","components/Demo.tsx","App.tsx","index.tsx"],"names":["module","exports","b","Symbol","c","d","e","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","A","getOwnPropertySymbols","process","Object","hasOwnProperty","propIsEnumerable","toObject","val","TypeError","test1","String","test2","i","order2","test3","letter","err","shouldUseNative","checkPropTypes","typeSpecs","values","location","componentName","getStack","Function","emptyFunction","emptyFunctionWithReset","secret","Error","shim","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","resetWarningCache","require$$2","BasicFieldPropTypes","label","PropTypes","disabled","value","helperText","onChange","name","DigKeyPropType","OptionsFieldPropTypes","options","valueKey","labelKey","BaseSelectPropTypes","isRequired","FieldPropTypes","output","FieldDecorationPropTypes","children","FieldDecoration","useBaseComponents","LabelText","React","BaseInput","props","className","BaseSelect","key","ListInputDecoration","ObjectInputDecoration","Flex","Box","Button","type","BaseComponentsContext","createContext","useContext","TextInput","NumberInput","Number","defaultVal","digKey","useProcessOptionsMemo","useMemo","Array","option","JSON","digged","processOptions","propTypes","Select","valueLabel","Checkbox","falseValue","flag","trueValue","handleChange","useProcessBool","checked","processMultiSelectValue","Set","set","generateMultiSelectValue","ret","CheckboxGroup","useFieldComponents","flags","useProcessMultiSelectMemo","otherProps","setFlag","MissingAttributeError","constructor","attributes","fieldName","fieldType","message","generalizeValueCallback","valueCallback","param","UndefinedFieldTypeError","getComponent","Components","field","Component","DefaultInputComponent","editable","deletable","isCreating","inlineDelete","of","undefined","onClick","onDelete","DefaultDecorationComponent","ListInputBuilder","InputComponent","DecorationComponent","defaultProps","ListInput","creatable","defaultNewVal","handleEdit","index","handleDelete","handleCreate","createLabel","placeholder","ListOfTextField","ObjectFieldPropTypes","fields","ObjectInput","DefaultFieldComponents","text","select","checkbox","checkbox_group","list","text_list","FieldComponentsContext","BaseFormPropTypes","BaseForm","appliedDefault","useRef","formValue","mergeDefaultValue","propFields","useState","reduceFields","reducer","setFields","changeHandler","useEffect","fieldValue","FieldWrapper","Demo","setValue","style","display","width","margin","flex","jsyaml","dump","copy","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1fe9c37.chunk.js","sourcesContent":["module.exports = {\"myTextField\":{\"type\":\"text\",\"label\":\"a simple text field\",\"helperText\":\"some helper text\"},\"myNumberField\":{\"type\":\"number\",\"label\":\"a number field\",\"helperText\":\"some helper text\",\"defaultVal\":123},\"mySelectField\":{\"label\":\"a select field\",\"type\":\"select\",\"helperText\":\"some helper text\",\"options\":{\"label1\":\"value1\",\"label2\":\"value2\"},\"defaultVal\":\"value2\"},\"check\":{\"type\":\"checkbox\",\"label\":\"check me!\",\"helperText\":\"some helper text\",\"trueValue\":123},\"check_group\":{\"type\":\"checkbox_group\",\"label\":\"checkbox group\",\"helperText\":\"help\",\"options\":[\"1\",\"2\",\"3\"]},\"check_group2\":{\"type\":\"checkbox_group\",\"label\":\"Checkbox Group 2\",\"helperText\":\"this output format of this checkbox group is different\",\"options\":[{\"value\":\"1\",\"helperText\":\"helper text for specific option\"},\"2\",\"3\"],\"output\":\"object\"},\"text_ll\":{\"label\":\"this is a list of text\",\"type\":\"list\",\"of\":\"text\",\"defaultNewVal\":\"\",\"inlineDelete\":true,\"placeholder\":\"new text\"},\"object\":{\"type\":\"object\",\"label\":\"Object Field\",\"fields\":{\"field1\":{\"label\":\"f1\",\"type\":\"text\"}}},\"copy\":{\"label\":\"the label will be same as input content\",\"type\":\"text\",\"helperText\":\"a custom fieldReducer is called in value function\"}}","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar has = Function.call.bind(Object.prototype.hasOwnProperty);\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import { FunctionComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { FieldComponentProps } from './index'\nimport { ValueEventCallback } from '../ValueEventCallback'\n\nexport interface BasicField<T> {\n  type?: string\n  label?: string\n  disabled?: boolean\n  defaultVal?: T\n  helperText?: string\n  placeholder?: string\n  createLabel?: string\n  inlineDelete?: boolean\n}\n\nexport interface CommonFieldComponentProps<T> {\n  onChange?: ValueEventCallback<T>\n  value?: T\n  name?: string\n}\n\nexport type BasicFieldComponentProps<T> = CommonFieldComponentProps<T> & BasicField<T>\n\nexport type BasicFieldComponent<T> = FunctionComponent<FieldComponentProps<T>>\n\n/**\n * PropTypes of a field component\n */\nexport const BasicFieldPropTypes = {\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  value: PropTypes.any,\n  helperText: PropTypes.string,\n  onChange: PropTypes.func,\n  name: PropTypes.string\n}\n","import { FunctionComponent } from 'react'\nimport { BasicField, BasicFieldPropTypes, CommonFieldComponentProps } from './basic'\nimport PropTypes from 'prop-types'\n\n/**\n * DigKey type\n * Dig value from array of object\n * string is to direct access\n * string array is to dig through the nested structure\n */\nexport type DigKey = string | string[]\n\nexport const DigKeyPropType = PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n\nexport type Option<T> = {\n  [key: string]: unknown | T\n} | T\n\nexport type Options<T> = {[label: string]: T} | Array<Option<T>>\n\nexport interface OptionsField<T> extends BasicField<T>{\n  options?: Options<T>\n  valueKey?: DigKey\n  labelKey?: DigKey\n}\n\nexport type OptionsFieldComponentProps<T> = CommonFieldComponentProps<T> & OptionsField<T>\nexport type OptionsFieldComponent<T> = FunctionComponent<OptionsFieldComponentProps<T>>\n\nexport const OptionsFieldPropTypes = {\n  ...BasicFieldPropTypes,\n  options: PropTypes.array,\n  valueKey: DigKeyPropType,\n  labelKey: DigKeyPropType\n}\n\nexport const BaseSelectPropTypes = {\n  options: PropTypes.array.isRequired\n}\n\nexport type BaseSelectComponent<T> = FunctionComponent<CommonFieldComponentProps<T> & { options: Array<{ label: string, value: T }> }>\n","import { FunctionComponent } from 'react'\nimport { OptionsField } from './options'\nimport { BasicField, BasicFieldPropTypes, CommonFieldComponentProps } from './basic'\nimport { BoolField } from './bool'\nimport { MultiSelectField, MultiSelectValue } from './multiSelect'\nimport { ListField } from './list'\nimport { ObjectField } from './object'\nimport { FormValue } from '../FormValue'\n\n/**\n * Definition of any Field in yaml\n * Update this when new field is added\n */\nexport type Field<T> = BasicField<T> | OptionsField<T> | BoolField<T> | MultiSelectField<MultiSelectValue<T>> | ListField<T> | ObjectField<FormValue>\n\n/**\n * Definition of field dictionary\n */\nexport interface Fields {\n  [fieldName: string]: Field<unknown>\n}\n\nexport type FieldComponentProps<T> = CommonFieldComponentProps<T> & Field<T>\nexport type FieldComponent<T> = FunctionComponent<FieldComponentProps<T> & { [prop: string]: unknown }>\nexport type BaseFieldComponent<T> = FunctionComponent<CommonFieldComponentProps<T>>\n\n/**\n * PropTypes of a field component\n */\nexport const FieldPropTypes = {\n  ...BasicFieldPropTypes\n}\n\nexport * from './basic'\nexport * from './options'\nexport * from './multiSelect'\n","import { FunctionComponent } from 'react'\nimport { CommonFieldComponentProps } from './basic'\nimport PropTypes from 'prop-types'\nimport { OptionsField, OptionsFieldPropTypes } from './options'\nimport { BoolField } from './bool'\n\nexport type MultiSelectOutput = 'set' | 'array' | 'object'\n\nexport interface MultiSelectField<T extends MultiSelectValue<unknown>> extends OptionsField<T>, BoolField<T> {\n  output?: MultiSelectOutput\n}\n\nexport type MultiSelectFieldComponentProps<T extends MultiSelectValue<unknown>> = CommonFieldComponentProps<T> & MultiSelectField<T>\nexport type MultiSelectFieldComponent<T extends MultiSelectValue<unknown>> = FunctionComponent<MultiSelectFieldComponentProps<T>>\n\nexport const MultiSelectFieldPropTypes = {\n  ...OptionsFieldPropTypes,\n  output: PropTypes.string\n}\n\nexport type MultiSelectValue<T> = Set<T> | T[] | Record<string | number, boolean>\n","import { useBaseComponents } from '../BaseComponentsContext'\nimport React, { FunctionComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const FieldDecorationPropTypes = {\n  helperText: PropTypes.string,\n  label: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport type FieldDecorationComponent = FunctionComponent<PropTypes.InferProps<typeof FieldDecorationPropTypes>>\nexport const FieldDecoration: FieldDecorationComponent = ({\n  helperText,\n  label,\n  children\n}) => {\n  const { HelperText, LabelText } = useBaseComponents()\n  return (\n    <label>\n      {label !== undefined ? <LabelText>{label}</LabelText> : null}\n      {children}\n      {(helperText !== undefined ? <HelperText>{helperText}</HelperText> : null)}\n    </label>\n  )\n}\n\nFieldDecoration.propTypes = FieldDecorationPropTypes\n","import React, { FunctionComponent } from 'react'\nimport { BaseFieldComponent, BaseSelectComponent, BaseSelectPropTypes } from '../../types'\nimport { BaseBoolComponent } from '../../types/fields/bool'\nimport { FieldDecoration, FieldDecorationComponent, FieldDecorationPropTypes } from './FieldDecoration'\nimport PropTypes from 'prop-types'\n\nexport const BaseInput: FunctionComponent = (props) => <input className='form-control' {...props}/>\nBaseInput.defaultProps = {\n  value: ''\n}\n\nexport const BaseSelect: BaseSelectComponent<string | number> = ({ options, ...props }) => (\n  <select className='form-control' {...props}>\n    {options.map(({ value, label }) => (\n      <option key={label} value={value}>{label}</option>\n    ))}\n  </select>\n)\n\nBaseSelect.propTypes = BaseSelectPropTypes\n\nexport const BaseCheckbox: FunctionComponent = (props) => <input className='form-check-input' type='checkbox' {...props} />\n\nexport const HelperText: FunctionComponent = ({ ...props }) => <small className='box form-text text-muted' {...props} />\n\nexport const LabelText: FunctionComponent = ({ ...props }) => <label className='box form-label' {...props} />\n\nexport const FieldWrapper: FunctionComponent = ({ ...props }) => <div className='reforml-form-group' {...props} />\n\nexport { FieldDecoration } from './FieldDecoration'\n\nexport const ListInputDecoration: FieldDecorationComponent = ({ label, helperText, children, ...props }) => (\n  <div className='list-input-decoration' {...props}>\n    {label !== undefined ? <div className='list-input-label'>\n      {label}\n    </div> : null}\n    <FieldDecoration helperText={helperText}>\n      {children}\n    </FieldDecoration>\n  </div>\n)\nListInputDecoration.propTypes = FieldDecorationPropTypes\n\nexport const ObjectInputDecoration: FieldDecorationComponent = ({ label, helperText, children, ...props }) => (\n  <div className='object-input-decoration' {...props}>\n    {label !== undefined ? <div className='object-input-label'>\n      {label}\n    </div> : null}\n    <FieldDecoration helperText={helperText}>\n      {children}\n    </FieldDecoration>\n  </div>\n)\nObjectInputDecoration.propTypes = FieldDecorationPropTypes\n\nexport const ListInputCreateBox: FunctionComponent = (props) => <div className='list-input-create-box' {...props}/>\n\nexport const Flex: FunctionComponent<{className?: string}> = ({ className = '', ...props }) => <div className={`flex ${className}`} {...props}/>\nFlex.propTypes = {\n  className: PropTypes.string\n}\n\nexport const Box: FunctionComponent<{className?: string}> = ({ className = '', ...props }) => <div className={`box ${className}`} {...props}/>\nBox.propTypes = {\n  className: PropTypes.string\n}\n\nexport const Button: FunctionComponent<{className?: string}> = ({ className = '', ...props }) => <button className={`btn ${className}`} {...props}/>\nButton.propTypes = {\n  className: PropTypes.string\n}\n\nexport interface BaseComponents {\n  BaseInput: BaseFieldComponent<string>\n  BaseSelect: BaseSelectComponent<string | number>\n  BaseCheckbox: BaseBoolComponent<unknown>\n  HelperText: FunctionComponent\n  LabelText: FunctionComponent\n  FieldWrapper: FunctionComponent\n  ListInputDecoration: FieldDecorationComponent\n  ObjectInputDecoration: FieldDecorationComponent\n  ListInputCreateBox: FunctionComponent\n  FieldDecoration: FieldDecorationComponent\n  Flex: FunctionComponent<{className?: string}>\n  Box: FunctionComponent<{className?: string}>\n  Button: FunctionComponent<{className?: string}& React.HTMLProps<HTMLButtonElement>>\n}\n","import { createContext, useContext } from 'react'\nimport * as DefaultBaseComponents from './base'\nimport { BaseComponents } from './base'\n\nexport const BaseComponentsContext = createContext<BaseComponents>(DefaultBaseComponents)\nBaseComponentsContext.displayName = 'BaseComponentsContext'\n\nexport const useBaseComponents = (): BaseComponents => useContext(BaseComponentsContext)\n\nexport { DefaultBaseComponents }\n","import { FieldComponent, FieldPropTypes } from '../../types'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useBaseComponents } from '../BaseComponentsContext'\nimport { FieldDecoration } from '../base/FieldDecoration'\n\nexport const TextInput: FieldComponent<string> = ({\n  helperText,\n  onChange,\n  value,\n  label,\n  defaultVal,\n  ...props\n}) => {\n  const { BaseInput } = useBaseComponents()\n  return (\n    <FieldDecoration label={label} helperText={helperText}>\n      <BaseInput {...props} onChange={onChange} value={value}/>\n    </FieldDecoration>\n  )\n}\n\nTextInput.propTypes = {\n  ...FieldPropTypes,\n  value: PropTypes.string\n}\n","import { FieldComponent, FieldPropTypes } from '../../types'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { TextInput } from './TextInput'\n\nexport const NumberInput: FieldComponent<number> = ({\n  onChange,\n  value,\n  defaultVal,\n  ...props\n}) => {\n  const handleChange = (value: string | {target: {value: string}}): void => {\n    if (typeof value === 'string') {\n      onChange?.(Number.parseFloat(value))\n    } else if ('value' in value.target) {\n      onChange?.(Number.parseFloat(value.target.value))\n    }\n  }\n  return (\n    <TextInput\n      onChange={handleChange}\n      type='number'\n      {...props}\n      value={value?.toString()}\n      defaultVal={defaultVal?.toString()}\n    />\n  )\n}\n\nNumberInput.propTypes = {\n  ...FieldPropTypes,\n  value: PropTypes.number\n}\n","import { DigKey } from '../types'\n\nexport const digKey = <T>(object: Record<string, unknown> | T, key: DigKey): T => {\n  if (typeof key === 'string') {\n    return object[key] as T\n  } else {\n    if (key.length === 0) {\n      return object as T\n    } else {\n      const [head, ...tail] = key\n      return digKey(object[head] as Record<string, unknown>|T, tail)\n    }\n  }\n}\n","import { DigKey, Options } from '../types'\nimport { digKey } from '../utils/digKey'\nimport { useMemo } from 'react'\n\ninterface ValueLabel<T> {\n  value: T\n  label: string\n  [otherProps: string]: unknown\n}\n\ninterface ProcessSettings {\n  valueKey?: DigKey\n  labelKey?: DigKey\n}\n\nexport const processOptions = <T> (options: Options<T>, { valueKey, labelKey }: ProcessSettings = {}): Array<ValueLabel<T>> => {\n  if (Array.isArray(options)) {\n    return options.map((option) => {\n      let value: T\n      let label: string = typeof option === 'string' ? option : JSON.stringify(option)\n      if (typeof option === 'object') {\n        if (valueKey !== undefined) {\n          value = digKey(option, valueKey)\n        } else if ('value' in option) {\n          value = option.value as T\n        } else {\n          value = option as T\n        }\n        if (labelKey !== undefined) {\n          const digged = digKey(option, labelKey)\n          label = typeof digged === 'string' ? digged : JSON.stringify(digged)\n        } else if ('label' in option) {\n          const digged = option.label\n          label = typeof digged === 'string' ? digged : JSON.stringify(digged)\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          label = value.toString()\n        }\n        return { ...option, value, label }\n      } else {\n        value = option\n        return { value, label }\n      }\n    })\n  } else {\n    return Object.entries(options).map(([label, value]) => ({ value, label }))\n  }\n}\n\nexport const useProcessOptionsMemo = <T>(options?: Options<T>, settings?: ProcessSettings): Array<ValueLabel<T>> => useMemo(\n  () => (\n    options !== undefined\n      ? processOptions<T>(options, settings)\n      : []\n  ),\n  [options]\n)\n","import React from 'react'\nimport { FieldPropTypes } from '../../types'\nimport { useProcessOptionsMemo } from '../../hooks/useProcessOptionsMemo'\nimport { OptionsFieldComponent } from '../../types/fields'\nimport { useBaseComponents } from '../BaseComponentsContext'\nimport { FieldDecoration } from '../base/FieldDecoration'\n\nconst propTypes = {\n  ...FieldPropTypes\n}\n\nexport const Select: OptionsFieldComponent<string | number> = ({ helperText, label, options, value, onChange, valueKey, labelKey, defaultVal, ...props }) => {\n  const valueLabel = useProcessOptionsMemo<string | number>(options, { labelKey, valueKey })\n\n  const { BaseSelect } = useBaseComponents()\n  return (\n    <FieldDecoration helperText={helperText} label={label}>\n      <BaseSelect options={valueLabel} value={value} onChange={onChange} {...props} />\n    </FieldDecoration>\n  )\n}\n\nSelect.propTypes = propTypes\n","import { FieldPropTypes } from '../../types'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { BoolFieldComponent } from '../../types/fields/bool'\nimport { useBaseComponents } from '../BaseComponentsContext'\nimport { useProcessBool } from '../../hooks/useProcessBool'\n\nexport const Checkbox: BoolFieldComponent<unknown> = ({\n  helperText,\n  onChange,\n  value,\n  label,\n  defaultVal,\n  trueValue,\n  falseValue,\n  ...props\n}) => {\n  const [flag, handleChange] = useProcessBool(value, onChange, { trueValue, falseValue })\n  const { LabelText, HelperText, BaseCheckbox, Flex, Box } = useBaseComponents()\n  return (\n    <Box>\n      <LabelText>\n        <Flex>\n          <Box>\n            <BaseCheckbox onChange={handleChange} checked={flag} {...props} />\n          </Box>\n          <Box>\n            <Box>\n              {label}\n            </Box>\n            <Box>\n              {(helperText !== undefined ? <HelperText>{helperText}</HelperText> : null)}\n            </Box>\n          </Box>\n        </Flex>\n      </LabelText>\n    </Box>\n  )\n}\n\nCheckbox.propTypes = {\n  ...FieldPropTypes,\n  value: PropTypes.any\n}\n","import { ValueEventCallback } from '../types'\n\ninterface ProcessSettings<T> {\n  trueValue?: T\n  falseValue?: T\n}\n\ntype ProcessBoolReturnType = [boolean, () => void]\n\nexport const useProcessBool = <T> (value?: T, onChange?: ValueEventCallback<T>, { trueValue, falseValue }: ProcessSettings<T> = {}): ProcessBoolReturnType => {\n  const flag: boolean = (typeof value === 'boolean' ? value : trueValue !== undefined && value === trueValue)\n  const handleChange = (): void => {\n    const newValue = !flag\n    if (newValue) {\n      if (trueValue !== undefined) {\n        onChange?.(trueValue)\n      } else {\n        onChange?.(true as unknown as T)\n      }\n    } else {\n      onChange?.(falseValue as unknown as T)\n    }\n  }\n  return [flag, handleChange]\n}\n","import { MultiSelectOutput, MultiSelectValue } from '../types/fields'\nimport { isSet } from '../utils/isSet'\nimport { ValueEventCallback } from '../types'\nimport { useMemo } from 'react'\n\nexport const processMultiSelectValue = <T> (value?: MultiSelectValue<T>): Set<T> => {\n  if (value === undefined) {\n    return new Set([])\n  } else if (isSet(value)) {\n    return value\n  }\n  if (Array.isArray(value)) {\n    return new Set(value)\n  } else {\n    return new Set<string>(Object.entries(value).filter(([_, flag]) => flag).map(([value]) => value)) as unknown as Set<T>\n  }\n}\n\nexport const generateMultiSelectValue = <T> (set: Set<T>, output: MultiSelectOutput = 'array'): MultiSelectValue<T> => {\n  if (output === 'set') {\n    return set\n  } else if (output === 'array') {\n    return Array.from(set)\n  } else {\n    const ret = {}\n    set.forEach((key) => {\n      if (typeof key === 'string') {\n        ret[key as string] = true\n      } else {\n        throw new Error('value of options of multiselect view must be of type string')\n      }\n    })\n    return ret\n  }\n}\n\nexport type ProcessMultiSelectReturnType<T> = [\n  Set<T>,\n  (value: T) => () => unknown\n]\n\nexport const useProcessMultiSelectMemo = <T> (onChange?: ValueEventCallback<MultiSelectValue<T>>, value?: MultiSelectValue<T>, output: MultiSelectOutput = 'array'): ProcessMultiSelectReturnType<T> => {\n  return useMemo(() => {\n    const flags = processMultiSelectValue(value)\n    const setFlag = (value: T) => (): void => {\n      if (flags.has(value)) {\n        flags.delete(value)\n      } else {\n        flags.add(value)\n      }\n      onChange?.(generateMultiSelectValue(flags, output))\n    }\n    return [flags, setFlag]\n  }, [onChange, value, output])\n}\n","export const isSet = <T> (set: Set<T> | unknown): set is Set<T> => {\n  if (typeof set === 'object' && set !== null) {\n    return 'add' in set && 'clear' in set && 'delete' in set && 'entries' in set && 'forEach' in set && 'has' in set && 'keys' in set\n  } else {\n    return false\n  }\n}\n","import { FieldPropTypes, MultiSelectFieldComponent, MultiSelectValue } from '../../types'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useFieldComponents } from '../FieldComponentsContext'\nimport { useProcessOptionsMemo } from '../../hooks/useProcessOptionsMemo'\nimport { useProcessMultiSelectMemo } from '../../hooks/useProcessMultiSelectMemo'\nimport { FieldDecoration } from '../base/FieldDecoration'\nimport { useBaseComponents } from '../BaseComponentsContext'\n\nexport const CheckboxGroup: MultiSelectFieldComponent<MultiSelectValue<unknown>> = ({\n  helperText,\n  onChange,\n  value,\n  label,\n  options,\n  valueKey,\n  labelKey,\n  output\n}) => {\n  const Checkbox = useFieldComponents().checkbox\n  const valueLabel = useProcessOptionsMemo<unknown>(options, { labelKey, valueKey })\n  const [flags, setFlag] = useProcessMultiSelectMemo(onChange, value, output)\n  const { Box } = useBaseComponents()\n  return (\n    <Box>\n      <FieldDecoration label={label} helperText={helperText}>\n      </FieldDecoration>\n      {valueLabel.map(({ value, label, ...otherProps }) => (\n        <Checkbox key={label} {...otherProps} label={label} value={flags.has(value)} onChange={setFlag(value)}/>\n      ))}\n    </Box>\n  )\n}\n\nCheckboxGroup.propTypes = {\n  ...FieldPropTypes,\n  value: PropTypes.any\n}\n","export class MissingAttributeError extends Error {\n  name = 'MissingAttributeError'\n\n  constructor (attributes: string | string[], fieldName?: string, fieldType?: string) {\n    super(MissingAttributeError.getMessage(attributes, fieldName, fieldType))\n  }\n\n  private static getMessage (attributes: string | string[], fieldName?: string, fieldType?: string): string {\n    let message = ''\n    if (fieldName !== undefined) {\n      message += `Field '${fieldName}'`\n    } else {\n      message += 'A field'\n    }\n    message += ' is missing the required attribute'\n    if (typeof attributes === 'string') {\n      message += ` '${attributes}'`\n    } else {\n      message += `s '${attributes.join('\\', \\'')}'`\n    }\n    if (fieldType !== undefined) {\n      message += ` as a '${fieldType}' field`\n    }\n    message += '.'\n    return message\n  }\n}\n","import { ValueEventCallback } from '../types'\n\nexport const generalizeValueCallback = <T> (valueCallback: (value: T) => unknown): ValueEventCallback<T> => (param: T | ({\n  target: { value: T }\n})): void => {\n  if (typeof param === 'object') {\n    if ('target' in param) {\n      valueCallback(param.target.value)\n    } else {\n      valueCallback(param)\n    }\n  } else {\n    valueCallback(param)\n  }\n}\n","export class UndefinedFieldTypeError extends Error {\n  name = 'UndefinedFieldTypeError'\n  constructor (fieldType: string, fieldName?: string) {\n    super(UndefinedFieldTypeError.getMessage(fieldType, fieldName)\n    )\n  }\n\n  private static getMessage (fieldType: string, fieldName?: string): string {\n    return (\n      fieldName === undefined\n        ? 'Some field'\n        : `Field '${fieldName}'`\n    ) + ` uses an undefined field type '${fieldType}',\n     please make sure you had register a FieldComponent for this type in ReformlProvider, \n     or specify another field type for this field`\n  }\n}\n","import { Field, FieldComponent } from '../types/fields'\nimport { FieldComponents } from '../types'\nimport { UndefinedFieldTypeError } from '../errors/UndefinedFieldTypeError'\nimport { MissingAttributeError } from '../errors/MissingAttributeError'\n\nexport const getComponent = (Components: FieldComponents, field: string | Field<unknown>, fieldName?: string): FieldComponent<unknown> => {\n  if (typeof field === 'string') {\n    const Component: FieldComponent<unknown> | undefined = Components[field]\n    if (Component === undefined) {\n      throw new UndefinedFieldTypeError(field, fieldName)\n    }\n    return Component\n  } else {\n    if (field.type === undefined) {\n      throw new MissingAttributeError('type', fieldName)\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const Component: FieldComponent<unknown> | undefined = Components[field.type]\n    if (Component === undefined) {\n      throw new UndefinedFieldTypeError(field.type, fieldName)\n    }\n    return Component\n  }\n}\n","import React, { FunctionComponent } from 'react'\nimport { ListFieldComponent } from '../../types/fields/list'\nimport { MissingAttributeError } from '../../errors/MissingAttributeError'\nimport { CommonFieldComponentProps, Field, FieldPropTypes } from '../../types/fields'\nimport { generalizeValueCallback } from '../../utils/generalizeValueCallback'\nimport { useBaseComponents } from '../BaseComponentsContext'\nimport { useFieldComponents } from '../FieldComponentsContext'\nimport { getComponent } from '../../utils'\n\nexport type ListInputComponentProps<T> = CommonFieldComponentProps<T> & Field<T> & {\n  onDelete?: () => unknown\n  deletable?: boolean\n  editable?: boolean\n  isCreating: boolean\n  placeholder?: string\n  listName?: string\n  inlineDelete?: boolean\n  of?: string | Field<unknown>\n}\n\nexport type ListInputComponent<T> = FunctionComponent<ListInputComponentProps<T>>\n\nexport type ListDecorationComponentProps<T > = Field<T>\n\nexport type ListDecorationComponent<T> = FunctionComponent<ListDecorationComponentProps<T>>\n\nexport interface ListInputBuilderOptions<T> {\n  InputComponent?: ListInputComponent<T>\n  DecorationComponent?: ListDecorationComponent<T>\n  defaultProps?: Record<string, unknown>\n}\n\nconst DefaultInputComponent: ListInputComponent<unknown> = ({\n  of, inlineDelete, listName, value, type, name, editable = true, deletable = true, isCreating, onChange, onDelete, ...props\n}) => {\n  if (type === undefined) {\n    throw new MissingAttributeError('of.type', name === undefined ? listName : name)\n  }\n  const Components = useFieldComponents()\n  const { Box, Button } = useBaseComponents()\n  const Component = getComponent(Components, type, name)\n  return (\n    <Box className={isCreating ? 'list-input-create-box' : 'list-input-item-box'}>\n      <Box className={inlineDelete === true ? 'flex' : ''}>\n        <Box className='flex1'>\n          <Component\n            {...props}\n            {...(typeof of === 'string' ? {} : of)}\n            value={value}\n            onChange={onChange !== undefined ? generalizeValueCallback(onChange) : undefined}\n          />\n        </Box>\n        <Box>\n          {!isCreating && deletable ? <Button className='btn-danger' onClick={onDelete}>Delete</Button> : null}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nDefaultInputComponent.propTypes = {\n  ...FieldPropTypes\n}\n\nconst DefaultDecorationComponent: ListDecorationComponent<unknown> = (props) => {\n  const { ListInputDecoration } = useBaseComponents()\n  return <ListInputDecoration {...props} />\n}\n\nexport function ListInputBuilder <T> ({\n  InputComponent = DefaultInputComponent as ListInputComponent<T>,\n  DecorationComponent = DefaultDecorationComponent as ListDecorationComponent<T>,\n  defaultProps\n}: ListInputBuilderOptions<T> = {}): ListFieldComponent<T> {\n  const ListInput: ListFieldComponent<T> = (props) => {\n    const {\n      onChange,\n      deletable = true,\n      creatable = true,\n      editable = true,\n      helperText,\n      type,\n      label,\n      of,\n      value = [],\n      name,\n      defaultNewVal,\n      createLabel,\n      placeholder,\n      inlineDelete\n    } = props\n    if (defaultNewVal === undefined) {\n      throw new MissingAttributeError('defaultNewVal', name, type)\n    }\n    const handleEdit = (index: number) => (v: T) => {\n      if (value !== undefined && editable) {\n        value[index] = v\n        onChange?.([...value])\n      }\n    }\n    const handleDelete = (index: number) => () => {\n      if (value !== undefined && deletable) {\n        onChange?.(value.filter((_, k) => k !== index))\n      }\n    }\n    const handleCreate = (v: T): void => {\n      if (creatable) {\n        if (value === undefined) {\n          onChange?.([v])\n        } else {\n          value.push(v)\n          onChange?.(value)\n        }\n      }\n    }\n    return <DecorationComponent label={label} helperText={helperText}>\n      {\n        [...value, defaultNewVal].map((v: T, index) => (\n          index !== value.length\n            ? (\n              <InputComponent\n                key={index}\n                name={name}\n                type={typeof of === 'string' ? of : undefined}\n                {...(typeof of !== 'string' ? of : {})}\n                of={of}\n                value={v}\n                onChange={generalizeValueCallback(handleEdit(index))}\n                disabled={!editable}\n                deletable={deletable}\n                editable={editable}\n                onDelete={handleDelete(index)}\n                isCreating={false}\n                inlineDelete={inlineDelete}\n              />\n            )\n            : (\n              creatable ? (\n                <InputComponent\n                  key={index}\n                  name={name}\n                  type={typeof of === 'string' ? of : undefined}\n                  {...(typeof of !== 'string' ? of : {})}\n                  of={of}\n                  label={createLabel}\n                  placeholder={placeholder}\n                  value={v}\n                  onChange={generalizeValueCallback(handleCreate)}\n                  isCreating={true}\n                  inlineDelete={inlineDelete}\n                />)\n                : null\n            )\n        ))\n      }\n    </DecorationComponent>\n  }\n\n  ListInput.propTypes = {\n    ...FieldPropTypes\n  }\n\n  ListInput.defaultProps = defaultProps\n\n  return ListInput\n}\n","import { ListFieldComponent } from '../../types/fields/list'\nimport { FieldPropTypes } from '../../types/fields'\nimport { ListInputBuilder } from './ListInputBuilder'\n\nexport const ListInput: ListFieldComponent<unknown> = ListInputBuilder<unknown>()\n\nListInput.propTypes = {\n  ...FieldPropTypes\n}\n","import { ListFieldComponent } from '../../types/fields/list'\nimport { FieldPropTypes } from '../../types/fields'\nimport { ListInputBuilder, ListInputComponent } from './ListInputBuilder'\nimport { MissingAttributeError } from '../../errors'\nimport { useBaseComponents } from '../BaseComponentsContext'\nimport { generalizeValueCallback } from '../../utils'\nimport React from 'react'\nimport { ValueEventCallback } from '../../types'\nimport { TextInput } from './TextInput'\n\nconst InputComponent: ListInputComponent<string> = ({\n  value, type, name, editable = true, deletable = true, isCreating, onChange, onDelete, ...props\n}) => {\n  if (type === undefined) {\n    throw new MissingAttributeError('of.type', name)\n  }\n  const { Flex, Box, Button } = useBaseComponents()\n  return (\n    <Flex className={isCreating ? 'list-input-create-box' : 'list-input-item-box'}>\n      <Box className='flex1'>\n        <TextInput\n          {...props}\n          value={value}\n          onChange={onChange !== undefined ? generalizeValueCallback(onChange) as ValueEventCallback<unknown> : undefined}\n        />\n      </Box>\n      <Box>\n        {!isCreating && deletable ? <Button className='btn-danger' onClick={onDelete}>Delete</Button> : null}\n      </Box>\n    </Flex>\n  )\n}\n\nInputComponent.propTypes = {\n  ...FieldPropTypes\n}\n\nexport const ListOfTextField: ListFieldComponent<string> = ListInputBuilder<string>({ InputComponent, defaultProps: { defaultNewVal: '', of: 'string' } })\n\nListOfTextField.propTypes = {\n  ...FieldPropTypes\n}\n","import { FunctionComponent } from 'react'\nimport { BasicField, BasicFieldPropTypes, CommonFieldComponentProps } from './basic'\nimport PropTypes from 'prop-types'\nimport { FormValue } from '../FormValue'\nimport { Fields } from './index'\n\nexport interface ObjectField<T extends FormValue> extends BasicField<T> {\n  fields?: Fields\n}\n\nexport type ObjectFieldComponentProps<T extends FormValue> = CommonFieldComponentProps<T> & ObjectField<T>\nexport type ObjectFieldComponent<T extends FormValue> = FunctionComponent<ObjectFieldComponentProps<T>>\n\nexport const ObjectFieldPropTypes = {\n  ...BasicFieldPropTypes,\n  fields: PropTypes.any\n}\n","import { FormValue } from '../../types'\nimport React from 'react'\nimport { useBaseComponents } from '../BaseComponentsContext'\nimport { ObjectFieldComponent, ObjectFieldPropTypes } from '../../types/fields/object'\nimport { BaseForm } from '../forms'\nimport { generalizeValueCallback } from '../../utils'\nimport { MissingAttributeError } from '../../errors'\n\nexport const ObjectInput: ObjectFieldComponent<FormValue> = ({\n  helperText,\n  onChange,\n  value,\n  label,\n  fields,\n  defaultVal,\n  name,\n  type\n}) => {\n  if (onChange === undefined) {\n    throw new Error('onChange is required')\n  }\n  if (fields === undefined) {\n    throw new MissingAttributeError('fields', name, type)\n  }\n  const { ObjectInputDecoration, Box } = useBaseComponents()\n  return (\n    <ObjectInputDecoration label={label} helperText={helperText}>\n      <Box className='object-item-box'>\n        <BaseForm onChange={generalizeValueCallback(onChange)} fields={fields} value={value === undefined ? defaultVal === undefined ? {} : defaultVal : value}/>\n      </Box>\n    </ObjectInputDecoration>\n  )\n}\n\nObjectInput.propTypes = {\n  ...ObjectFieldPropTypes\n}\n","import { TextInput } from './TextInput'\nimport { FieldComponents } from '../../types'\nimport { NumberInput } from './NumberInput'\nimport { Select } from './Select'\nimport { Checkbox } from './Checkbox'\nimport { CheckboxGroup } from './CheckboxGroup'\nimport { ListInput } from './ListInput'\nimport { ListOfTextField } from './ListOfTextField'\nimport { ObjectInput } from './ObjectInput'\n\nexport const DefaultFieldComponents: FieldComponents = {\n  text: TextInput,\n  number: NumberInput,\n  select: Select,\n  checkbox: Checkbox,\n  checkbox_group: CheckboxGroup,\n  list: ListInput,\n  text_list: ListOfTextField,\n  object: ObjectInput\n}\n","import { createContext, useContext } from 'react'\nimport { DefaultFieldComponents } from './fields'\nimport { FieldComponents } from '../types'\n\nexport const FieldComponentsContext = createContext<FieldComponents>(DefaultFieldComponents)\nFieldComponentsContext.displayName = 'FieldComponentsContext'\n\nexport const useFieldComponents = (): FieldComponents => useContext(FieldComponentsContext)\n","import React, { ReactElement, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { FieldComponent, FieldComponents, Fields, FormValue } from '../../types'\nimport { useFieldComponents } from '../FieldComponentsContext'\nimport { mergeDefaultValue } from '../../utils/mergeDefaultValue'\nimport { useBaseComponents } from '../BaseComponentsContext'\nimport { getComponent } from '../../utils/getComponent'\nimport { generalizeValueCallback } from '../../utils/generalizeValueCallback'\n\nexport const BaseFormPropTypes = {\n  onChange: PropTypes.func,\n  fields: PropTypes.object,\n  value: PropTypes.object\n}\n\nexport type ReduceFields = (reducer: (currentFields: Fields) => Fields) => void\n\nexport interface FormSettings {\n  reduceFields: ReduceFields\n}\n\nexport type FormChangeHandler<T extends FormValue> = (value: T, settings: FormSettings) => unknown\n\nexport interface BaseFormProps<T extends FormValue> {\n  onChange: FormChangeHandler<T>\n  fields: Fields\n  value: T\n}\n\nexport function BaseForm<T extends FormValue> ({\n  onChange,\n  fields: propFields,\n  value\n}: BaseFormProps<T>): ReactElement<BaseFormProps<T>> {\n  const Components: FieldComponents = useFieldComponents()\n  const appliedDefault = useRef<boolean>(false)\n  let flag = false\n  if (!appliedDefault.current) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    flag = mergeDefaultValue(propFields, value)\n    appliedDefault.current = true\n  }\n  const [fields, setFields] = useState(propFields)\n  const reduceFields: ReduceFields = reducer => setFields(reducer(fields))\n  const changeHandler = (value: T): void => {\n    onChange(value, { reduceFields })\n  }\n  useEffect(() => {\n    if (flag) {\n      changeHandler({ ...value })\n    }\n  }, [flag])\n  const handleChange = (fieldName: string, fieldValue: unknown): void => {\n    changeHandler({ ...value, [fieldName]: fieldValue })\n  }\n  const { FieldWrapper } = useBaseComponents()\n  return (\n    // TODO: IDK how to remove this fragment without conflicting the type\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    <React.Fragment>\n      {Object.entries(fields).map(([fieldName, field]) => {\n        const Component: FieldComponent<unknown> = getComponent(Components, field, fieldName)\n\n        const changeHandler = generalizeValueCallback((value) => handleChange(fieldName, value))\n\n        return (\n          <FieldWrapper key={fieldName}>\n            <Component\n              {...field}\n              value={value[fieldName]}\n              name={fieldName}\n              onChange={changeHandler}\n            />\n          </FieldWrapper>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nBaseForm.propTypes = BaseFormPropTypes\n","import { Fields, FormValue } from '../types'\n\n/**\n * Apply the default value of fields to formValue if not present\n * @param fields\n * @param formValue\n */\nexport function mergeDefaultValue (fields: Fields, formValue: FormValue): boolean {\n  let flag = false\n  Object.entries({ ...fields }).forEach(([fieldName, field]) => {\n    if (formValue[fieldName] === undefined) {\n      if (field.defaultVal !== undefined) {\n        flag = true\n        if (Array.isArray(field.defaultVal)) {\n          formValue[fieldName] = Object.assign([], field.defaultVal)\n        } else if (typeof field.defaultVal === 'object') {\n          formValue[fieldName] = Object.assign({}, field.defaultVal)\n        } else {\n          formValue[fieldName] = field.defaultVal\n        }\n      }\n    }\n  })\n  return flag\n}\n","import React, { FunctionComponent, useState } from 'react'\nimport 'reforml/dist/index.css'\nimport { FormSettings, FormChangeHandler, FormValue, BaseForm, Fields } from 'reforml'\nimport jsyaml from 'js-yaml'\n\nimport fields from './form.yml'\n\nconst Demo: FunctionComponent = () => {\n  const [value, setValue] = useState({})\n  const handleChange: FormChangeHandler<FormValue> = (v: FormValue, { reduceFields }: FormSettings) => {\n    reduceFields((fields: Fields): Fields => {\n      if ('copy' in v) {\n        fields.copy.label = v.copy as string\n      }\n      return fields\n    })\n    setValue(v)\n  }\n  return (\n    <div style={{ display: 'flex', width: '100%', margin: 'auto' }}>\n      <div style={{ flex: 1 }}>\n        <code>\n          <pre>\n            {jsyaml.dump(fields)}\n          </pre>\n        </code>\n      </div>\n      <div style={{ flex: 1 }}>\n        <BaseForm onChange={handleChange} fields={fields} value={value}/>\n      </div>\n      <div style={{ flex: 1 }}>\n        <code>\n          <pre>\n            {JSON.stringify(value, null, 2)}\n          </pre>\n        </code>\n      </div>\n    </div>\n  )\n}\n\nexport default Demo\n","import React, { FunctionComponent } from 'react'\nimport Demo from './components/Demo'\n\nconst App: FunctionComponent = () => {\n  return (\n    <Demo />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}