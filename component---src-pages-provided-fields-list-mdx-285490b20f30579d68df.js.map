{"version":3,"sources":["webpack:///./src/pages/provided-fields/list.mdx"],"names":["title","_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0SAKO,IAAMA,EAAQ,yBACRC,EAAe,GAOtBC,EAAc,CAClBF,QACAC,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,QADR,QAGA,4DACA,iBAAQ,CACN,GAAM,UADR,UAGA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,0uBAiBL,iBAAQ,CACN,GAAM,0BADR,0BAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,YACd,KAAQ,SAHP,6bA6BTJ,EAAWK,gBAAiB","file":"component---src-pages-provided-fields-list-mdx-285490b20f30579d68df.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const title = 'list - Provided Fields';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  title,\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h1>\n    <p>{`Field that can manage list of value`}</p>\n    <h2 {...{\n      \"id\": \"schema\"\n    }}>{`Schema`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yml\"\n      }}>{`<fieldName in value>:\n  type: checkbox_group\n  label: string? # fieldName to display\n  defaultVal: any? # default value\n  helperText: string? # text to help user to input\n  disabled: boolean? # disable the input, default false\n\n  of?: string | Field<any> # subfield definition to be used for the list\n  inlineDelete?: boolean # whether the delete button is inline with each subfield\n  deletable?: boolean    # user can delete from the list, default true\n  editable?: boolean     # user can edit existing item in the list, default true\n  creatable?: boolean    # user can add new item to the list, default true\n  defaultNewVal?: any    # default value in new item input\n  placeholder?: string   # placeholder for new item input\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example---list-of-text\"\n    }}>{`Example - list of text`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=true\",\n        \"live\": \"true\"\n      }}>{`() => {\n  const [value, setValue] = useState({})\n  const fields = useMemo(() => jsyaml.load(\\`\n  myField:\n    type: list\n    of: text\n    label: my field\n    helperText: help\n    inlineDelete: true\n    defaultNewVal: ''\n    placeholder: New\n  \\`), [])\n  return (\n    <div>\n      <BaseForm fields={fields} value={value} onChange={setValue}/>\n      value:\n      <pre>{JSON.stringify(value, null, 2)}</pre>\n    </div>\n  )\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}